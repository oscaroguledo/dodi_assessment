version: '3.8'
networks:
  cinema_network:
    driver: bridge

services:
  my-postgres:
    image: postgres:latest
    container_name: db
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - cinema_network

  web:
    build:
      context: .
      dockerfile: ./DockerFile
    env_file:
      - .env
    container_name: django
    command: >
        sh -c "python manage.py makemigrations && 
                python manage.py migrate && 
                python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    environment:
      - DATABASE_NAME=${DB_NAME}
      - DATABASE_USER=${DB_USER}
      - DATABASE_PASSWORD=${DB_PASSWORD}
      - DATABASE_HOST=${DB_HOST}
      - DATABASE_PORT=${DB_PORT}
    ports:
      - "8000:8000"
    depends_on:
      - my-postgres
      - redis
    networks:
      - cinema_network
    


  celery_worker:
    build:
      context: .
      dockerfile: ./DockerFile
    env_file:
      - .env
    command: celery -A cinema.celery worker --pool=solo --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - my-postgres
      - redis
    networks:
      - cinema_network

  celery_beat:
    build:
      context: .
      dockerfile: ./DockerFile
    env_file:
      - .env
    command: celery -A cinema.celery beat --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - my-postgres
      - redis
    networks:
      - cinema_network

  redis:
    image: redis:latest
    env_file:
      - .env
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - cache:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DATABASES=${REDIS_DATABASES}
    networks:
      - cinema_network

volumes:
  db_data:
  cache:
    driver: local
